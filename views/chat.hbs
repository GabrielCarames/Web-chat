<link rel='stylesheet' href='/css/webchat.css' />
<script src="/socket.io/socket.io.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js" type="text/javascript"></script>
<script src="//momentjs.com/downloads/moment-with-locales.js"></script>
<script src="/js/converter.js"></script>

<div id="notifications">
</div>

<h4 id="username" style="color: white;" hidden>{{username}}</h4>
<div id="container" class="container">
    <div id="user" class="row">
        <div id="userdata" class="col">
            <div class="row" style="height: 50px;">
                <div class="col-8">
                    <h4 id="chatName" style="color: white;"> {{username}}</h4>
                </div>
                <div class="col">
                    <div id="options" class="row">
                        <div class="col" >
                            Crear grupo 
                        </div>
                        <div class="col">
                            Buscador
                        </div>
                        <div class="col">
                            Configuracion
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" id="actions">
                &nbsp
            </div>
        </div>
    </div>
    <form id="form" class="container">
        <div id="chat" class="row">
            <div id="messages">
                
            </div>
        </div>
        <div class="row">
            <input id="message" class="form-control" placeholder="Escribe un mensaje"></input>
            <button id="send" class="btn btn-success">Enviar</button>
        </div>
    </form>

    <div id="friendsPanel" class="row"></div>
    <div id="friendsTwo" class="row"></div>
</div>
<script>
    var socket = io();
    var username = $("#username").text()
    var chatId = (window.location.href).split('/')[4]
    var form = document.getElementById('form');
    var message = document.getElementById('message');
    var friendsPanel = document.getElementById('friendsPanel');
    
    $.get("http://localhost:3000/user/getfriends", data => {
        if (data.status) {
            $.each(data.friends, function(){
                friendsPanel.innerHTML += 
                    '<div class="col">' +/*
                        '<img src=' + this.avatar + 'class="avatarImg" alt="wow">' +*/ this.username +
                        ' &nbsp&nbsp&nbsp&nbsp&nbspultima vez conectado: '+
                    '</div>'
            })
        } else {
            friendsPanel.innerHTML = data.message
        }
    });
    
    // Envia al server que el usuario se conecto
    socket.emit('connected', username, chatId)

    // Cuando un usuario envia un mensaje, se emite esta accion con el nombre y el mensaje del usuario al servidor
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        if (message.value) {
            socket.emit('message', {
                message: message.value, 
                username: username
            });
            message.value = '';
        }
    });

    // Recibe y muestra la conexion de un usuario
    socket.once('userconnect', function(username){
        messages.innerHTML += '<p>' + username + ' se ha conectado</p>'
    })

    function insertMessages(username, message, createdAt){
         messages.innerHTML +=
            '<div class="row">'+ 
               '<div class="col" style= "max-width: 80px">'+
                    '<img src="{{avatar}}" class="avatarImg" alt="wow">'+
                '</div>'+
                '<div class="col" style="margin-left: -20px">'+
                    '<p>' + username + '&nbsp dice:&nbsp' + message + '<small> &nbsp&nbsp&nbsp&nbsphace ' + convertUntilNow(createdAt) + '</small> </p>'+
                '</div>'+
            '</div>'
    }

    // Recibe y mustra el historial de mensajes
    socket.on('chathistory', function(messages, chatinfo){
        $.each(messages, function(){
            insertMessages(this.user.username, this.message, this.createdAt)
        })
        if(chatinfo.chatType == 'public'){
            chatName.innerHTML += chatinfo.name
        }else{
            chatName.innerHTML += chatinfo.users[0].username
        }
    })

    // Recibe y muestra la desconexion de un usuario
    socket.on('userdisconnect', function(username){
        messages.innerHTML += '<p>' + username + ' se ha desconectado</p>'
    })

    // Si el usuario esta escribiendo se le informa al servidor
    message.addEventListener('keypress', function(){
        socket.emit('typing', username)
    });

    // Recibe y muestra cuando el usuario esta escribiendo
    socket.on('typing', function(data) {
        actions.innerHTML = '<p><em style="color: white">' + data + ' esta escribiendo</em></p>'
    });

    // Recibe y muestra el mensaje del usuario
    socket.on('message', function(data, createdAtDate) {
        actions.innerHTML = "";
        insertMessages(data.username, data.message, data.createdAt)
    });
</script>
  


