<link rel='stylesheet' href='/css/webchat.css' />
<script src="/socket.io/socket.io.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js" type="text/javascript"></script>
<script src="//momentjs.com/downloads/moment-with-locales.js"></script>
<script src="/js/converter.js"></script>

<div id="notifications">
</div>

<h4 id="username" style="color: white;" hidden>{{username}}</h4>

<div class="d-flex justify-content-center">
<div class="mb-4 mt-5 w-75" style="height:700px;">
    <div class="row">
        <div class="col-md-9">
            <div class="row" style="height: 50px;">
                <div class="col-md-4 d-flex justify-content-start">

                </div>
                <div class="col d-flex justify-content-end">
                    <div class="col d-flex align-items-center">
                        <button class="uk-button uk-button-primary uk-button-small text-white"
                            style="background-color: #24263d;">Crear grupo</button>
                    </div>
                    <div class="col d-flex align-items-center">
                        <button class="uk-button uk-button-primary uk-button-small text-white"
                            style="background-color: #24263d;">Configuracion</button>
                    </div>
                    <div class="col d-flex align-items-center">
                        <button class="uk-button uk-button-primary uk-button-small text-white"
                            style="background-color: #24263d;">Buscador</button>
                    </div>
                </div>
            </div>
            <div id="messageContainer" class="row uk-overflow-auto" style="height:600px;">
                <div id="messages">

                </div>
            </div>
            <div class="row mt-2">
                <div class="col-md-10">
                    <input id="messageToSend" class="uk-input" type="text" placeholder="Escribe un mensaje">
                </div>
                <div class="col d-flex align-items-cente">
                    <button onClick="sendMessage()" class="uk-button uk-button-primary uk-button-small text-white"
                        style="background-color: #24263d;">Enviar mensaje</button>
                </div>
            </div>
        </div>
        <div class="col">
            <h1 class="uk-heading-divider">Amigos</h1>
            <div id="friendsPanel">
                
            </div>
        </div>
    </div>
</div>
</div>
<script>
    var socket = io();
    var username = $("#username").text()
    var chatId = (window.location.href).split('/')[4]
    var message = document.getElementById('messageToSend');
    var friendsPanel = document.getElementById('friendsPanel');

    $.get("http://localhost:3000/user/getfriends", data => {
        if (data.status) {
            $.each(data.friends, function () {
                friendsPanel.innerHTML +=
                    '<div class="col">' + this.username +
                    ' &nbsp&nbsp&nbsp&nbsp&nbspultima vez conectado: ' + convertUntilNow(this.createdAt)
                    '</div>'
            })
        } else {
            friendsPanel.innerHTML = data.message
        }
    });

    // Envia al server que el usuario se conecto
    socket.emit('connected', username, chatId)

    // Cuando un usuario envia un mensaje, se emite esta accion con el nombre y el mensaje del usuario al servidor}
    function sendMessage() {
        if (message.value) {
            socket.emit('message', {
                message: message.value,
                username: username
            });
            message.value = '';
        } else {
            alert("Escribe algo para enviar")
        }
    }

    // Recibe y muestra la conexion de un usuario
    socket.once('userconnect', function (username) {
        messages.innerHTML += '<p>' + username + ' se ha conectado</p>'
    })

    function insertMessages(username, message, createdAt) {
        messages.innerHTML +=
            '<div class="row">' +
            '<div class="col" style= "max-width: 80px">' +
            '<img src="{{avatar}}" class="avatarImg" alt="wow">' +
            '</div>' +
            '<div class="col" style="margin-left: -20px">' +
            '<p>' + username + '&nbsp dice:&nbsp' + message + '<small> &nbsp&nbsp&nbsp&nbsphace ' + convertUntilNow(createdAt) + '</small> </p>' +
            '</div>' +
            '</div>'
    }

    // Recibe y mustra el historial de mensajes
    socket.on('chathistory', function (messages, chatinfo) {
        $.each(messages, function () {
            insertMessages(this.user.username, this.message, this.createdAt)
        })
        if (chatinfo.chatType == 'public') {
            chatName.innerHTML += chatinfo.name
        } else {
            chatName.innerHTML += chatinfo.users[0].username
        }
    })

    // Recibe y muestra la desconexion de un usuario
    socket.on('userdisconnect', function (username) {
        messages.innerHTML += '<p>' + username + ' se ha desconectado</p>'
    })

    // Si el usuario esta escribiendo se le informa al servidor
    message.addEventListener('keypress', function () {
        socket.emit('typing', username)
    });

    // Recibe y muestra cuando el usuario esta escribiendo
    socket.on('typing', function (data) {
        actions.innerHTML = '<p><em style="color: white">' + data + ' esta escribiendo</em></p>'
    });

    // Recibe y muestra el mensaje del usuario
    socket.on('message', function (data, createdAtDate) {
        actions.innerHTML = "";
        insertMessages(data.username, data.message, data.createdAt)
    });
</script>