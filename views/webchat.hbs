<link rel='stylesheet' href='/css/webchat.css' />
<script src="/socket.io/socket.io.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.7.0/moment.min.js" type="text/javascript"></script>
<script src="//momentjs.com/downloads/moment-with-locales.js"></script>
<div id="notifications">

</div>
<div id="container" class="container">
    <div id="user" class="row">
        <div id="userdata" class="col">
            <div class="row">
                <h4 id="username" style="color: white;">{{username}}</h4>
            </div>
            <div class="row" id="actions">

            </div>
        </div>
    </div>
    <form id="form" class="container">
        <div id="chat" class="row">
            <div id="messages">
                
            </div>
        </div>
        <div class="row">
            <input id="message" class="form-control" placeholder="Your Message Here"></input>
            <button id="send" class="btn btn-success">Send</button>
        </div>
    </form>
    <div id="friendsOne" class="row">
        <div class="col">
            don pepe  pizzeria
        </div>
        <div class="col">
            tachancka
        </div>
    </div>
    <div id="friendsTwo" class="row">
        <div class="col">
            jose mantas
        </div>
        <div class="col">
            parches
        </div>
    </div>
    <div id="options" class="row">
        <div class="col-8">
            joshmicuca
        </div>
        <div class="col-1" onclick="addfriend()">
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" style="height: 80%">
                <small> Agregar amigos</small> 
            </button>
        </div>
        <div class="col-1" >
            opcion 2 
        </div>
        <div class="col-1">
            opcion 3 
        </div>
        <div class="col-1">
            configuracion
        </div>

    </div>
    <form action="/user/addfriend" method="POST" class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Agregar amigos</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="color: black;">
                    <small style="font-size: ;"> Ingresa el nombre del amigo </small>
                    <input type="text" class="form-control" name="addfriend">
                    <button type="submit" class="btn btn-primary">Enviar solicitud</button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secundary">Salir</button>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    var socket = io();
    var username = $("#username").text()
    var form = document.getElementById('form');
    var message = document.getElementById('message');

    // convierte fecha linda
    function convertUntilNow(datetime){
        moment.locale('es')
        var time = moment(datetime);
        var untilNow = time.fromNow(true);
        return untilNow;
    }

    // Envia al server que el usuario se conecto
    socket.emit('connected', username)

    // Cuando un usuario envia un mensaje, se emite esta accion con el nombre y el mensaje del usuario al servidor
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        if (message.value) {
            socket.emit('message', {
                message: message.value, 
                username: username
            });
            message.value = '';
        }
    });

    // Recibe y muestra la conexion de un usuario
    socket.once('userconnect', function(username){
        messages.innerHTML += '<p>' + username + ' se ha conectado</p>'
    })

    // Recibe y mustra el historial de mensajes
    socket.on('chathistory', function(data){
        $.each(data, function(){
            messages.innerHTML += '<p>' + this.user.username + 'hace:' + convertUntilNow(this.createdAt) + 'dice:' + this.message +'</p>'
        })
    })

    // Recibe y muestra la desconexion de un usuario
    socket.on('userdisconnect', function(username){
        messages.innerHTML += '<p>' + username + ' se ha desconectado</p>'
    })

    // Si el usuario esta escribiendo se le informa al servidor
    message.addEventListener('keypress', function(){
        socket.emit('typing', username)
    });

    // Recibe y muestra cuando el usuario esta escribiendo
    socket.on('typing', function(data) {
        actions.innerHTML = '<p><em style="color: white">' + data + ' esta escribiendo</em></p>'
    });

    // Recibe y muestra el mensaje del usuario
    socket.on('message', function(data, createdAtDate) {
        console.log(data)
        actions.innerHTML = "";
        messages.innerHTML += '<p>' + data.username + " dice: " + data.message + '<small>' + '&nbsp&nbsp&nbsp&nbsphace ' + convertUntilNow(data.createdAt) + '</small>' + '</p>';
    });


</script>